DISCLAIMER:

I just added this to github.com, a lot of clean-up needs to take place, refactoring, documentation, markdown, etc.  Please do not use this
code-base as an example of how to build a robust, secure site.  I am building this as fast as I can to get my thoughts down
and this is my weekend-warrior project for my wife who love's Karaoke.  I'm building it from her.  If you'd like to join in on the fun please fork and contribute to cleaning things up.

The main thing I need to do is to create a new controller for the Raspberry Pi that will play the Karaoke files through the PyKaraoke project which is also on github.

Thanks

-Ralph


App: KaraokeBerry

Desc: KaraokeBerry is a webserver app that will play Karaoke CDG/MP3 files using the HDMI output and audio output of the Raspberry Pi.

Initial Setup:

1. From fresh install of Raspbian
2. sudo apt-get update (installs latest OS)
3. sudo apt-get install pip
4. sudo apt-get install git-core
5. sudo apt-get install pykaraoke (installs in main site-packages)

6. create a virtualenv (make sure that you are using site-packages otherwise can't reference pykaraoke)
7. go to Desktop
8. virtualenv KaraokePi
9. cd KaraokePi
10. source bin/activate
11. pip install flask
12. python karaokepi_server.py (starts the Flask server)
13. consider using redis as a backing store, i see the light about redis being a kind of extension of Python with it's awesome datastructures

TODO:

1. run pykaraoke from a different child process
2. create whole rest api that's json based
3. create admin login so that only one admin can run the app
4. integrate jquery mobile site with flask server side backend (possibly due it all through rest requests with state simply in javascript local to the page???)
5. add the pi linux commands to this repository.
6. create admin interface that looks like windows metro blocks for pause, play, restart, fullscreen toggle, etc.

GETTING STARTED:
1. navigate to localhost:5000/mobile  (to see the jquery mobile interface in action)
2. read karaokepi.py to see all the rest calls supported.
